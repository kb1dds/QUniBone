

Class hierarchy for UniBone - devices


TODO:
devices.cpp -> unibus_device.cpp





// base class, for uniform GUI interface
class device_c {
	parameter_c <vector>

	thread

	name
}


// communicates with PRU over "unibusadapter"
// - register accesses
// - send interrupts
// - initiate DMA
//

class unibus_device_c::device_c {
	// 2nd thread for unibuown thr
	registers[]
}


// storage device. physical drive
// simulates slow speed up, track-to-track search
class diskdrive_c::device_c {
	bool attached ;
	bool readonly ;
	uint8_t	unitnr ;
	image_filename ;
}


class diskcontroller_c::unibus_device {
	drive_count
	// list of drives, indexed by unit number
	diskdrives[]
}

